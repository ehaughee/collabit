extends layout

block content
  #editor
  include includes/chat
  #overlay
    span#chat_load_msg
    //- TODO: Make this a less ugly loader
    img#img-load(src='/images/img-load.gif')
  button#btn_join Join Chat  
  script.
    usernames = [];

    $(function() {

      // ACE Editor
      // ===============
      var editor = ace.edit("editor");
      editor.getSession().setUseWorker(false);
      editor.setTheme("ace/theme/monokai");
      editor.getSession().setMode("ace/mode/javascript");

      //- $("select#theme").chosen({ width: "180px" })
      //-   .on('change', function() {
      //-     editor.setTheme("ace/theme/" + this.value);
      //-   });

      // Loading overlay
      // ===============
      $chat = $("#chat"); // CHANGE it to the table's id you have <- what the hell was I talking about.
      $editor = $("#editor");
      $overlay = $("#overlay");
      $img_load = $("#img-load");
      $btn_join = $("#btn_join");
      $chat_load_msg = $("#chat_load_msg");
      $messages = $('#messages');

      $overlay.css({
        opacity : 0.5,
        top     : $chat.offset().top,
        left    : $chat.offset().left,
        height  : $chat.outerHeight(),
        width   : $chat.outerWidth()
      });

      $img_load.css({
        top  : ($chat.height() / 2) - ($img_load.outerHeight() / 2),
        left : ($chat.width() / 2) - ($img_load.outerWidth() / 2)
      });

      $overlay.fadeIn();

      // Share.JS
      // ==============
      sharejs.open('#{session}', 'text', function(error, doc) {
        doc.attach_ace(editor);
      });

      // Socket.IO
      // ==============
      var socket = io.connect("http://" + document.domain + "/chat");

      socket.on('connect', function() {
        console.log("SOCKET: Connection detected.  Emitting 'adduser'");
        connect();
      });

      socket.on('updatechat', function(username, message) {
        console.log('SOCKET: \'updatechat\' emission detected.');
        write_chat_message(username, tokenize(message));
        //- var elem = document.getElementById('messages');
      });

      socket.on('updateusers', function(new_usernames) {
        console.log('SOCKET: updateusers [' + new_usernames.join(", ") + ']');
        usernames = new_usernames;
      });

      socket.on('updatelang', function(lang, username) {
        console.log("SOCKET: updatelang detected. Language changed to " + lang + " by " + username);
        // TODO: Should probably do some validation on this
        $("select#mode").val(lang).trigger("chosen:updated");
        write_chat_message("SERVER", username + " changed the language to " + lang);
      });

      socket.on('error', function(message) {
        console.log('ERROR: ' + message);

        $.gritter.add({
          title: "Error",
          text: message,
          sticky: true
        });
      });

      function connect() {
        var name = get_username();
        if (name !== false) {
          socket.emit('adduser', name, document.URL.substr(-6));
          $('textarea#message').removeAttr('disabled');
          $overlay.fadeOut();
        }
        else {
          $img_load.hide();
          $btn_join.css({
            top  : ($chat.height() / 2) - ($btn_join.outerHeight() / 2),
            left : $editor.width() + ($chat.width() / 2) - ($btn_join.outerWidth() / 2),
            display: "inline"
          });

          $.gritter.add({
            title: "Error",
            text: "Empty or invalid username.  Please click Join Chat to try again.",
            time: 6000,
            sticky: false
          });
        }
      }

      function write_chat_message(username, message) {
        $messages.append('<b>' + username + ':</b> ' + message + '<br>');
        $messages.scrollTop = $messages.scrollHeight;
      }
      
      function send_chat() {
        var messageBox = $('textarea#message')
        var message = messageBox.val();
        if (message !== "") {
          messageBox.val('');
          console.log('SOCKET: Send chat command detected.  Emitting \'sendchat\'');
          socket.emit('sendchat', message);
        }
      }

      function get_username() {
        var name = prompt('What is your name?');
        if (name !== "" && name !== null && 
            !name.match(/server/i) && 
            usernames.indexOf(name) === -1) {
          
          return name;
        }
        else {
          return false;
        }
      }

      function tokenize(message) {
        // Links
        var pat_link = /((http:\/\/)?\S+\.\S+)/ig;
        var rep_link = '<a href="$1">$1</a>';
        message = message.replace(pat_link, rep_link);

        return message;
      }

      // Chosen
      // ===============
      $("select#mode").chosen({ width: "180px" })
        .on('change', function () {
          editor.getSession().setMode("ace/mode/" + this.value);
          socket.emit('changelang', this.value);
        });

      // Event handlers
      // ==============
      $('textarea#message').keypress(function(e) {
        if(e.which == 13) {
          send_chat();
          return false;
        }
      });

      $('#btn_join').click(function() {
        connect();
      });

      window.onbeforeunload = function () {
        console.log('SOCKET: Closing/leaving collabit. Emitting \'userleft\'');
        socket.emit('userleft');
      };



    });
